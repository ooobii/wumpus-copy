/* groovylint-disable */
pipeline {
    agent {label 'linux'}
    stages {
        stage('Clone Repository') {
            steps {
                checkout([$class: 'GitSCM',
                    branches: [[name: "${GIT_BRANCH}"]],
                    extensions: [[$class: 'WipeWorkspace']],
                    userRemoteConfigs: [[url: 'git@github.com:ooobii/wumpus-copy.git']]
                ])
                // sh "git clone --branch $BRANCH_NAME git@github.com:ooobii/wumpus-copy.git ."
            }
        }
        stage('Fetch Composer & Repository') {
            parallel {
                stage('Install Build Dependancies') {
                    steps {
                        sh 'sudo apt install -y curl dpkg binutils xz-utils pandoc php7.3 php7.3-cli php7.3-mbstring php7.3-json php7.3-xml'
                    }
                }
                stage('Install Composer') {
                    steps {
                        sh '''
                        curl -sS https://getcomposer.org/installer -o composer-setup.php
                        mkdir composer
                        php composer-setup.php --install-dir=./composer --filename=composer
                        rm -rf composer-setup.php
                        '''
                    }
                }
            }
        }
        stage('Install Composer Pkgs') {
            steps {
                sh './composer/composer install'
            }
        }
        stage('Remove Composer') {
            steps {
                sh 'rm -rf ./composer'
            }
        }
        stage('Execute Tests') {
            steps {
                sh './vendor/phpunit/phpunit/phpunit --configuration ./test/phpunit.xml'
            }
        }
        stage('Remove Composer Packages') {
            steps {
                sh 'rm -rf ./vendor'
            }
        }
        stage('Build Package') {
            steps {
                sh 'make -C "./compile/linux" package'
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: 'build/*.deb', fingerprint: true
            junit 'test/logs/*.xml'
        }
    }
}